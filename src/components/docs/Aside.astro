---
import { useTranslatedPath } from "../i18n/utils";
import { getLangFromUrl, useTranslatedPathDocs } from "../i18n/utils";
import {
  docsMainMenu,
  docsMainBody,
  docsControls,
  docsOptions,
} from "./features";
const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);
const translatePathDocs = useTranslatedPathDocs(lang);
const docFeatures = {
  docsMainMenu: [...docsMainMenu],
  docsMainBody: [...docsMainBody],
  docsControls: [...docsControls],
  docsOptions: [...docsOptions],
};
---

<aside id="sidebar" class="bg-[#1d1e26]">
  <a class="flex h-full place-self-center mb-6" href={translatePath("/")}>
    <img
      src="/icon/eDevPlay.png"
      alt="played logo"
      class="navIconPlay h-10 hover:scale-105 transition-transform"
      transition:name="logo"
    />
  </a>
  <ul class="list-none">
    {
      Object.entries(docFeatures).map(([docsSection, features]) => {
        return features.map(({ depth, title, slug, description }) => {
          return (
            <a
              class={`${description ? "text-sm" : "text-xl text-white"}`}
              href={`${translatePathDocs(slug, Astro.url.pathname, docsSection)}`}
            >
              <div
                class={`pb-2 ${description ? "border-l-2 border-gray-500 hover:border-white" : ""}`}
              >
                <li
                  data-id={slug}
                  class={`text-gray-400 hover:text-white rounded-md p-1 max-w-60
              ${depth === 2 ? "ml-4" : ""}`}
                >
                  {title}
                </li>
              </div>
            </a>
          );
        });
      })
    }
  </ul>
</aside>
<style>
  #sidebar li.active {
    background-color: #42c973;
    color: black;
  }
  aside#sidebar {
    position: fixed;
    flex-shrink: 0;
    z-index: 50;
    top: 0px;
    padding-top: 30px;
    padding-left: 30px;
    width: 320px;
    max-height: calc(100vh);
    overflow-y: auto;
    padding-bottom: 1rem;
    animation: adjust-aside linear both;
    animation-timeline: scroll();
    animation-range: 0 400px;
  }
</style>
<script>
  // Scroll to aside active element
  // document.addEventListener("astro:page-load", () => {
  // document.addEventListener("DOMContentLoaded", () => {
  // const currentHash = window.location.hash;
  // const hashParse = currentHash.split("#").pop();

  // if (currentHash) {
  //   const targetElement = document.querySelector(
  //     `#sidebar li[data-id="${hashParse}"]`
  //   );
  //   if (targetElement) {
  //     targetElement.scrollIntoView({ behavior: "smooth" });
  //     targetElement.scrollIntoView({ block: "center" });
  //   }
  // }
  // });
</script>
