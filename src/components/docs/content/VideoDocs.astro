---
const { depth, src } = Astro.props;
---

<div class="group">
  <video
    autoplay
    muted
    playsinline
    onclick="this.paused ? this.play() : this.pause()"
    class={`lazy-video ${depth === 2 ? "ml-8" : ""} w-[1000px] hover:scale-105 transition-all duration-500 ease-in-out opacity`}
    data-src={`/media/${src}`}
  >
    <source type="video/mp4" /></video
  >
  <div class="text-left ml-8 mt-2">
    <p class="text-sm text-gray-500 opacity-5 group-hover:opacity-100">Click to play/pause</p>
  </div>
</div>
<script>
  document.addEventListener("astro:page-load", () => {
    const percentajeToVisible = 0.5;
    const videos: IntersectionObserverCallback = (entries, observer) => {
      entries.forEach((entry) => {
        if (
          entry.isIntersecting &&
          entry.intersectionRatio > percentajeToVisible
        ) {
          const video = entry.target as any;
          const source = video.querySelector("source");
          source.src = video.dataset.src;
          video.load();
          video.addEventListener("loadeddata", () => {
            video.style.opacity = 1;
            video.previousElementSibling.style.opacity = 0;
          });
          observer.unobserve(video);
        }
      });
    };

    const observerOption = {
      rootMargin: "0px",
      threshold: percentajeToVisible,
    };
    const videoObserver = new IntersectionObserver(videos, observerOption);
    document.querySelectorAll("video[data-src]").forEach((video) => {
      videoObserver.observe(video);
    });
  });
</script>
<style>
  .lazy-video {
    opacity: 0;
  }
</style>
